{"version":3,"file":"2-form-4b3051a1.js","sources":["../../src/js/2-form.js"],"sourcesContent":["// Завдання 2 - Форма зворотного зв'язку\n// Виконуй це завдання у файлах 2-form.html і 2-form.js.\n\n// Додай у HTML розмітку форми.\n// У JS напиши скрипт, який буде зберігати значення полів у локальне сховище,\n//     коли користувач щось друкує.\n// Виконуй це завдання у файлах 2 - form.html і 2 - form.js.\n//  Розбий його на декілька підзавдань:\n\n// Оголоси поза будь - якими функціями об’єкт formData з полями email та message,\n// які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n// Використовуй метод делегування для відстеження змін у формі через подію input.\n// Зберігай актуальні дані з полів email та message у formData та\n// записуй цей об’єкт у локальне сховище.\n// Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі.\n//  Якщо так, використовуй їх для заповнення форми та об'єкта formData.\n//  Якщо ні, залиш поля форми порожніми.\n// Перед відправленням форми переконайся, що обидва поля форми заповнені.\n// Якщо будь - яке з полів(властивостей об’єкта formData) порожнє,\n//     показуй сповіщення з текстом «Fill please all fields».\n//  Якщо всі поля заповнені, виведи у консоль об’єкт formData з\n//  актуальними значеннями, очисти локальне сховище, об’єкт formData і поля форми.\nconst form = document.querySelector('.feedback-form');\nconst formData = { email: '', message: '' };\nconst STORAGE_KEY = 'feedback-form-state';\n\n// Завантаження даних з локального сховища при завантаженні сторінки\ndocument.addEventListener('DOMContentLoaded', () => {\n  const savedData = localStorage.getItem(STORAGE_KEY);\n  if (savedData) {\n    Object.assign(formData, JSON.parse(savedData));\n    form.elements.email.value = formData.email;\n    form.elements.message.value = formData.message;\n  }\n});\n// Обробка події input та збереження даних у локальне сховище\nform.addEventListener('input', event => {\n  formData[event.target.name] = event.target.value;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));\n});\n// Обробка події submit форми\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const email = form.elements.email.value;\n  const message = form.elements.message.value;\n  if (email === '' || message === '') {\n    return console.log('Fill please all fields');\n  }\n  console.log(formData);\n  localStorage.removeItem(STORAGE_KEY);\n  formData.email = '';\n  formData.message = '';\n  form.reset();\n});\n"],"names":["form","formData","STORAGE_KEY","savedData","event","email","message"],"mappings":"AAuBA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EACnCC,EAAc,sBAGpB,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMC,EAAY,aAAa,QAAQD,CAAW,EAC9CC,IACF,OAAO,OAAOF,EAAU,KAAK,MAAME,CAAS,CAAC,EAC7CH,EAAK,SAAS,MAAM,MAAQC,EAAS,MACrCD,EAAK,SAAS,QAAQ,MAAQC,EAAS,QAE3C,CAAC,EAEDD,EAAK,iBAAiB,QAASI,GAAS,CACtCH,EAASG,EAAM,OAAO,IAAI,EAAIA,EAAM,OAAO,MAC3C,aAAa,QAAQF,EAAa,KAAK,UAAUD,CAAQ,CAAC,CAC5D,CAAC,EAEDD,EAAK,iBAAiB,SAAUI,GAAS,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAQL,EAAK,SAAS,MAAM,MAC5BM,EAAUN,EAAK,SAAS,QAAQ,MACtC,GAAIK,IAAU,IAAMC,IAAY,GAC9B,OAAO,QAAQ,IAAI,wBAAwB,EAE7C,QAAQ,IAAIL,CAAQ,EACpB,aAAa,WAAWC,CAAW,EACnCD,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnBD,EAAK,MAAK,CACZ,CAAC"}